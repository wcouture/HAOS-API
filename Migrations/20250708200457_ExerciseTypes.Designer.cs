// <auto-generated />
using System;
using HAOS.Models.Training;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HAOS_API.Migrations
{
    [DbContext(typeof(TrainingDb))]
    [Migration("20250708200457_ExerciseTypes")]
    partial class ExerciseTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HAOS.Models.Training.Circuit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("ProgramDayId")
                        .HasColumnType("int");

                    b.Property<int>("Rounds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramDayId");

                    b.ToTable("CircuitData");
                });

            modelBuilder.Entity("HAOS.Models.Training.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DemoUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExerciseData");
                });

            modelBuilder.Entity("HAOS.Models.Training.ProgramDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProgramSegmentId")
                        .HasColumnType("int");

                    b.Property<int>("SegmentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("WeekNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramSegmentId");

                    b.ToTable("ProgramDayData");
                });

            modelBuilder.Entity("HAOS.Models.Training.ProgramSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<string>("Subtitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int?>("TrainingProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingProgramId");

                    b.ToTable("SegmentData");
                });

            modelBuilder.Entity("HAOS.Models.Training.TrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Subtitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("ProgramData");
                });

            modelBuilder.Entity("HAOS.Models.Training.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CircuitId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Exercise_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CircuitId");

                    b.HasIndex("Exercise_Id");

                    b.ToTable("WorkoutData");
                });

            modelBuilder.Entity("HAOS.Models.User.CompletedWorkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WeightUsed")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("CompletedWorkoutData");
                });

            modelBuilder.Entity("HAOS.Models.User.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string>("CompletedCircuits")
                        .HasColumnType("longtext");

                    b.PrimitiveCollection<string>("CompletedDays")
                        .HasColumnType("longtext");

                    b.PrimitiveCollection<string>("CompletedPrograms")
                        .HasColumnType("longtext");

                    b.PrimitiveCollection<string>("CompletedSegments")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccountData");
                });

            modelBuilder.Entity("HAOS.Models.Training.Circuit", b =>
                {
                    b.HasOne("HAOS.Models.Training.ProgramDay", null)
                        .WithMany("Circuits")
                        .HasForeignKey("ProgramDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HAOS.Models.Training.ProgramDay", b =>
                {
                    b.HasOne("HAOS.Models.Training.ProgramSegment", null)
                        .WithMany("Days")
                        .HasForeignKey("ProgramSegmentId");
                });

            modelBuilder.Entity("HAOS.Models.Training.ProgramSegment", b =>
                {
                    b.HasOne("HAOS.Models.Training.TrainingProgram", null)
                        .WithMany("Segments")
                        .HasForeignKey("TrainingProgramId");
                });

            modelBuilder.Entity("HAOS.Models.Training.TrainingProgram", b =>
                {
                    b.HasOne("HAOS.Models.User.UserAccount", null)
                        .WithMany("SubscribedPrograms")
                        .HasForeignKey("UserAccountId");
                });

            modelBuilder.Entity("HAOS.Models.Training.Workout", b =>
                {
                    b.HasOne("HAOS.Models.Training.Circuit", null)
                        .WithMany("Workouts")
                        .HasForeignKey("CircuitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HAOS.Models.Training.Exercise", "Exercise_")
                        .WithMany()
                        .HasForeignKey("Exercise_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise_");
                });

            modelBuilder.Entity("HAOS.Models.User.CompletedWorkout", b =>
                {
                    b.HasOne("HAOS.Models.User.UserAccount", null)
                        .WithMany("CompletedWorkouts")
                        .HasForeignKey("UserAccountId");
                });

            modelBuilder.Entity("HAOS.Models.Training.Circuit", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("HAOS.Models.Training.ProgramDay", b =>
                {
                    b.Navigation("Circuits");
                });

            modelBuilder.Entity("HAOS.Models.Training.ProgramSegment", b =>
                {
                    b.Navigation("Days");
                });

            modelBuilder.Entity("HAOS.Models.Training.TrainingProgram", b =>
                {
                    b.Navigation("Segments");
                });

            modelBuilder.Entity("HAOS.Models.User.UserAccount", b =>
                {
                    b.Navigation("CompletedWorkouts");

                    b.Navigation("SubscribedPrograms");
                });
#pragma warning restore 612, 618
        }
    }
}
